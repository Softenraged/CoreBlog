!function(){"use strict";function s(s,e){var o=this;o.posts=[],o.error="",o.isBusy=!1,o.reverse=!0,o.predicate="title",o.getUnpublished=function(){o.isBusy=!0,e.getUnpublishedPosts().success(function(s){angular.copy(s,o.posts)}).error(function(s){o.error="Failed to get unpublished posts."})["finally"](function(){o.isBusy=!1})},o.getPublished=function(){o.isBusy=!0,e.getPublishedPosts().success(function(s){angular.copy(s,o.posts)}).error(function(s){o.error="Failed to get published posts."})["finally"](function(){o.isBusy=!1})},o.preview=function(){o.isBusy=!0,o.openPost={},e.getPost(s.id).success(function(s){angular.copy(s,o.openPost)}).error(function(){o.error="Failed to open post with id: "+s.id})["finally"](function(){o.isBusy=!1})},o.order=function(s){o.reverse=o.predicate===s?!o.reverse:!1,o.predicate=s},o["delete"]=function(s){o.isBusy=!0,e.deletePost(o.posts[s]).success(function(){o.posts.splice(s,1)}).error(function(s){o.error="Failed to delete: "+post.title})["finally"](function(){o.isBusy=!1})},o.approve=function(s){o.isBusy=!0,e.approvePost(o.posts[s]).success(function(e){o.posts.splice(s,1)}).error(function(s){o.error="Failed to approve: "+post.title})["finally"](function(){o.isBusy=!1})}}angular.module("adminApp").controller("postController",["$routeParams","controlPanelFactory",s])}();